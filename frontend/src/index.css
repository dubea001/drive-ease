@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  min-height: 4000px;
}

.overlay::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.4);
  z-index: 1;
}

.wrapper {
  @apply w-[100%] max-w-[1536px] mx-auto relative h-[8rem] overflow-hidden;
  /* mask-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1) 20%, rgba(0, 0, 0, 1) 90%, rgba(0, 0, 0, 0)); */
}

.item {
  @apply w-[150px] h-[6rem] absolute animate-scrollLeft;
  left: max(calc(200px * 10), 100%);
}

.item1 {
  animation-delay: calc(30s / 10 * (10 - 1) * -1);
}

.item2 {
  animation-delay: calc(30s / 10 * (10 - 2) * -1);
}

.item3 {
  animation-delay: calc(30s / 10 * (10 - 3) * -1);
}

.item4 {
  animation-delay: calc(30s / 10 * (10 - 4) * -1);
}

.item5 {
  animation-delay: calc(30s / 10 * (10 - 5) * -1);
}

.item6 {
  animation-delay: calc(30s / 10 * (10 - 6) * -1);
}

.item7 {
  animation-delay: calc(30s / 10 * (10 - 7) * -1);
}
.item8 {
  animation-delay: calc(30s / 10 * (10 - 8) * -1);
}
.item9 {
  animation-delay: calc(30s / 10 * (10 - 9) * -1);
}
.item10 {
  animation-delay: calc(30s / 10 * (10 - 10) * -1);
}